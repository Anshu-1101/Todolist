{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","useEffect","setItem","stringify","editItem","setEditItem","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","console","log","children","Task","useContext","className","onClick","TaskList","length","TaskForm","setTitle","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e356373a.chunk.js","sourcesContent":["import React, {createContext , useState , useEffect} from 'react';\r\nimport {v1 as uuid} from \"uuid\";\r\nexport const TaskListContext = createContext()\r\n\r\nconst TaskListContextProvider = props => {\r\n    const initialState = JSON.parse(localStorage.getItem('tasks')) || []\r\n  \r\n    const [tasks, setTasks] = useState(initialState)\r\n  \r\n    useEffect(() => {\r\n      localStorage.setItem('tasks', JSON.stringify(tasks))\r\n    }, [tasks])\r\n  \r\n    const [editItem, setEditItem] = useState(null)\r\n  \r\n  \r\n\r\n\r\n// add tasks:\r\nconst addTask = title => {\r\n    setTasks([...tasks, { title, id: uuid() }])\r\n  }\r\n\r\n// Remove tasks\r\nconst removeTask = id => {\r\n    setTasks(tasks.filter(task => task.id !== id))\r\n  }\r\n\r\n  //clr tasks\r\n  const clearList = () => {\r\n    setTasks([])\r\n  }\r\n\r\n  // Find task\r\n  const findItem = id => {\r\n    const item = tasks.find(task => task.id === id)\r\n\r\n    setEditItem(item)\r\n  }\r\n\r\n  // Edit task\r\n  const editTask = (title, id) => {\r\n    const newTasks = tasks.map(task => (task.id === id ? { title, id } : task))\r\n\r\n    console.log(newTasks)\r\n\r\n    setTasks(newTasks)\r\n    setEditItem(null)\r\n  }\r\n\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        clearList,\r\n        findItem,\r\n        editTask,\r\n        editItem\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskListContext.Provider>\r\n  )\r\n}\r\n\r\nexport default TaskListContextProvider;\r\n","import React, {useContext}  from 'react';\r\nimport{TaskListContext} from '../context/TaskListContext'\r\n\r\n\r\nconst Task=({task})=>{\r\n    const{removeTask, findItem}= useContext(TaskListContext)\r\n    \r\n    return (\r\n      <li className=\"list-item\">\r\n        <span>{task.title} </span>\r\n        <div>\r\n          <button\r\n            className=\"btn-delete task-btn\"\r\n            onClick={() => removeTask(task.id)}\r\n          >\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </button>{' '}\r\n          <button className=\"btn-edit task-btn\" onClick={() => findItem(task.id)}>\r\n            <i className=\"fas fa-pen\"></i>\r\n          </button>\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\nexport default Task;","import React , {useContext} from 'react';\r\nimport {TaskListContext} from '../context/TaskListContext';\r\nimport Task from './Task';\r\nconst TaskList=()=>{\r\n   const{tasks}= useContext(TaskListContext)\r\n   return (\r\n    <div>\r\n      {tasks.length ? (\r\n        <ul className=\"list\">\r\n          {tasks.map(task => {\r\n            return <Task task={task} key={task.id} />;\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <div className=\"no-tasks\">No Tasks</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;","import React, {useContext, useState, useEffect} from 'react';\r\nimport {TaskListContext} from '../context/TaskListContext';\r\n\r\nconst TaskForm = () => {\r\n    const { addTask, clearList, editTask, editItem } = useContext(TaskListContext)\r\n    const [title, setTitle] = useState('')\r\n\r\nconst handleChange = e => {\r\n    setTitle(e.target.value)\r\n  };\r\n\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (!editItem) {\r\n      addTask(title)\r\n      setTitle('')\r\n    } else {\r\n      editTask(title, editItem.id)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    if (editItem) {\r\n      setTitle(editItem.title)\r\n      console.log(editItem)\r\n    } else {\r\n      setTitle('')\r\n    }\r\n  }, [editItem])\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add Task...\"\r\n        value={title}\r\n        onChange={handleChange}\r\n        required\r\n        className=\"task-input\"\r\n      />\r\n      <div className=\"buttons\">\r\n        <button type=\"submit\" className=\"btn add-task-btn\">\r\n          {editItem ? 'Edit Task' : 'Add Task'}\r\n        </button>\r\n        <button className=\"btn clear-btn\" onClick={clearList}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm\r\n","import React from 'react';\r\n\r\nconst Header=()=>{\r\n    return(\r\n        <div className=\"header\">\r\n            <h1>TASK-MANAGER</h1>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default Header;","import React from 'react';\r\n\r\nimport TaskList from './TaskList';\r\nimport TaskForm from './TaskForm';\r\nimport TaskListContextProvider from '../context/TaskListContext';\r\nimport '../App.css';\r\nimport Header from \"./Header\";\r\nconst App=()=>{\r\n    return(\r\n    <TaskListContextProvider> \r\n    <div className=\"container\">\r\n        <div className=\"app-wrapper\">\r\n          <Header />\r\n          <div className=\"main\">\r\n            <TaskForm />\r\n            <TaskList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </TaskListContextProvider> \r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App/> , document.getElementById(\"root\"));\r\n"],"sourceRoot":""}